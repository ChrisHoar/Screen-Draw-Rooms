@page
@using ScreenDraw.Interfaces
@using Microsoft.Extensions.Logging;
@using Microsoft.AspNetCore.Http;
@*@inject IList<IColourListItem> ColourValues*@
@inject ISketchRooms sketchRooms
@inject ILogger<SketchRoomModel> logger;
@inject IHttpContextAccessor _httpContext

@{
    var roomName = string.Empty;
    var artistName = string.Empty;
    object currentImage = null;
    int canvasWidth = default;
    int canvasHeight = default;

    try
    {
        if (Request.QueryString.HasValue == true)
        {
            roomName = Request.Query["RoomName"];
            artistName = Request.Query["ArtistName"];
            _httpContext.HttpContext.Session.SetString("ArtistName", artistName);
        }
        currentImage = sketchRooms.Rooms.Where(r => r.Name == roomName).FirstOrDefault().CurrentImage;
        canvasWidth = sketchRooms.Rooms.Where(r => r.Name == roomName).FirstOrDefault().CanvasWidth;
        canvasHeight = sketchRooms.Rooms.Where(r => r.Name == roomName).FirstOrDefault().CanvasHeight;
    }
    catch (Exception ex)
    {
        logger.LogError(ex.Message);
    }

}

<div style="position: absolute; left: 5px; top: 5px; font-size:large;">

    <select id="shapes" name="shapes">
        <option value="free">Free</option>
        <option value="line">Line</option>
        <option value="square">Square</option>
        <option value="circle">Circle</option>
        <option value="ellipse">Ellipse</option>
    </select>

    <input type="color" id="colours" value="black" />
    <input type="range" min="1" max="80" value="4" class="slider" id="linethickness">

    <button onclick="undo();"><i class="fa fa-rotate-left"></i></button>
    <button onclick="redo();"><i class="fa fa-rotate-right"></i></button>
    @*<button onclick="setStartOrStopCanvasScroll();"><i class="move"></i></button>*@

</div>

<div style="overflow:scroll;">
    @*
        Temporary image used to add the current state of the image in the room to new users entering the room.
        The SetImage function adds it to the canvas. The currentImage is data held in the room
        instance, and is passed back in the DrawHub each time a user stops drawing.
        This image is hidden once teh canvas is updated
    *@
    <img src="@currentImage" id="currentImage" style=" position: absolute; top: 40px; left: 5px" width="@canvasWidth" height="@canvasHeight" />

    <canvas data="" id="canvas" style="border: solid 1px blue; position: absolute; top: 40px; left: 5px; overflow:hidden;" width="@canvasWidth" height="@canvasHeight">
    </canvas>

</div>

<div>
    <input type="hidden" id="roomName" value="@roomName" />
    <input type="hidden" id="artistName" value="@artistName" />
</div>

<div id="tracker"></div>

<script src="~/js/signalr/dist/browser/signalr.js"></script>
<script src="~/js/draw.js"></script>
<script>

    window.onload = SetImage();


    function SetImage() {
        var context = canvas.getContext('2d');

        var img = document.getElementById("currentImage");

        context.drawImage(img, 0, 0, img.width, img.height);

        img.style.visibility = "hidden";
    };

</script>


